@page
@model ChartsDemo.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Lets take a look at the weather!</p>
    <h1 class="display-4">Today's weather</h1>
</div>

<script src="~/js/moment.min.js"></script>
<script src="~/js/Chart.bundle.min.js"></script>

<div class="container">
    <canvas id="weatherBarChart" width="500" height="300"></canvas>
</div>

<div class="container">
    <canvas id="weatherLineChart" width="500" height="300"></canvas>
</div>

<script>
    // Data
    var myAmounts = [];
    var myCategories = [];
    var myWeatherC;
    var myWeatherF = [];

    function showBarChart() {
        myAmounts = myWeatherC.amountList;
        myCategories = myWeatherC.categoryList;
        let barChartCanvasName = document.getElementById("weatherBarChart");
        let weatherBarChart = new Chart(barChartCanvasName, {
            type: 'bar',
            data: {
                labels: myCategories,
                datasets: [{
                    label: 'temprature data',
                    data: myAmounts,
                    backgroundColor: getRandomColorEachData(myCategories.length),
                }]
            },
            options: {
                responsive: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }

    function showTimeLineChart() {
        var timeFormat = 'MMM D'
        let lineChartCanvasName = document.getElementById("weatherLineChart");
        var weatherLineChart = new Chart(lineChartCanvasName, {
            type: 'line',
            data: { datasets: [{label: 'Temperature per day in Fahrenheit', data: myWeatherF }] },
            options: {
                scales: {
                    xAxes: [{
                        type: 'time',
                        distribution: 'linear',
                        scaleLabel: {
                            display: true,
                            labelString: 'Date'
                        },
                        time: {
                            parser: timeFormat,
                            unit: 'day',
                            tooltipFormat: 'll'
                        },
                    }],
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: "Temperature (in F)",
                        }
                    }]
                }
            }
        });
    }

    // Get data from API endpoint
    function getBarChartData() {
        return fetch('./Index?handler=WeatherforecastChartData',
            {
                method: 'get',
                headers: {
                    'Content-Type': 'application/json;charset=UTF-8'
                }
            })
            .then(function (response) {
                if (response.ok) {
                    return response.text();
                } else {
                    throw Error('Response Not OK');
                }
            })
            .then(function (text) {
                try {
                    return JSON.parse(text);
                } catch (err) {
                    throw Error('Method Not Found');
                }
            })
            .then(function (responseJSON) {
                myWeatherC = responseJSON;
                showBarChart();
                showTimeLineChart();
            })
    }

    function getLineChartData() {
        return fetch('./Index?handler=WeatherforecastTempFData',
            {
                method: 'get',
                headers: {
                    'Content-Type': 'application/json;charset=UTF-8'
                }
            })
            .then(function (response) {
                if (response.ok) {
                    return response.text();
                } else {
                    throw Error('Response Not OK');
                }
            })
            .then(function (text) {
                try {
                    return JSON.parse(text);
                } catch (err) {
                    throw Error('Method Not Found');
                }
            })
            .then(function (responseJSON) {
                var i = 0;
                for (i = 0; i < responseJSON.dateList.length; i++) {

                    myWeatherF.push({ x: new Date(responseJSON.dateList[i]), y: responseJSON.tempFList[i] });
                }

                showTimeLineChart();
            })
    }

    // Color the chart
    var getRandomColor = function () {
        var r = Math.floor(Math.random() * 255);
        var g = Math.floor(Math.random() * 255);
        var b = Math.floor(Math.random() * 255);
        return "rgb(" + r + "," + g + "," + b + ")";
    }

    function getRandomColorEachData(count) {
        var data = [];
        for (var i = 0; i < count; i++) {
            data.push(getRandomColor());
        }
        return data;
    }
    getBarChartData();
    getLineChartData();
</script>